<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>博客搭建(持续更新ing)</title>
      <link href="/2023/11/29/bkdj/"/>
      <url>/2023/11/29/bkdj/</url>
      
        <content type="html"><![CDATA[<h1 id="博客搭建-持续更新ing"><a href="#博客搭建-持续更新ing" class="headerlink" title="博客搭建(持续更新ing)"></a>博客搭建(持续更新ing)</h1><h2 id="一、博客环境搭建"><a href="#一、博客环境搭建" class="headerlink" title="一、博客环境搭建"></a>一、博客环境搭建</h2><h3 id="1-下载Git和Node-js"><a href="#1-下载Git和Node-js" class="headerlink" title="1.下载Git和Node.js"></a>1.下载Git和Node.js</h3><h4 id="1-1-Node-js的安装与配置"><a href="#1-1-Node-js的安装与配置" class="headerlink" title="1.1.Node.js的安装与配置"></a>1.1.Node.js的安装与配置</h4><p>​首先去Node.js<a href="https://nodejs.org/en">官网</a> 下载node.js的安装程序，根据电脑系统的配置信息，下载对应的安装程序，然后开始下面的步骤。</p><p>​下载好与电脑系统对应的安装程序后，开始安装流程:</p><h5 id="1-1-1-打开下载好的Node-js安装程序，点击Next-进行下一步的安装；"><a href="#1-1-1-打开下载好的Node-js安装程序，点击Next-进行下一步的安装；" class="headerlink" title="1.1.1.打开下载好的Node.js安装程序，点击Next,进行下一步的安装；"></a>1.1.1.打开下载好的Node.js安装程序，点击Next,进行下一步的安装；</h5><h5 id="1-1-2-将”I-accept-the-terms-in-the-License-Agreement”前面的复选框勾选，同意安装协议，再点击Next，进行下一步操作；"><a href="#1-1-2-将”I-accept-the-terms-in-the-License-Agreement”前面的复选框勾选，同意安装协议，再点击Next，进行下一步操作；" class="headerlink" title="1.1.2.将”I accept the terms in the License Agreement”前面的复选框勾选，同意安装协议，再点击Next，进行下一步操作；"></a>1.1.2.将”I accept the terms in the License Agreement”前面的复选框勾选，同意安装协议，再点击Next，进行下一步操作；</h5><h5 id="1-1-3-选择Node-js安装程序的安装位置，在这里以’C-Program-Files-nodejs’为例，点击Next，进入下一步操作；"><a href="#1-1-3-选择Node-js安装程序的安装位置，在这里以’C-Program-Files-nodejs’为例，点击Next，进入下一步操作；" class="headerlink" title="1.1.3.选择Node.js安装程序的安装位置，在这里以’C:\Program Files\nodejs’为例，点击Next，进入下一步操作；"></a>1.1.3.选择Node.js安装程序的安装位置，在这里以’C:\Program Files\nodejs’为例，点击Next，进入下一步操作；</h5><h5 id="1-1-4-选择安装的模块和功能，这里全部安装，并添加到系统环境变量，继续点击Next，进入下一步操作；"><a href="#1-1-4-选择安装的模块和功能，这里全部安装，并添加到系统环境变量，继续点击Next，进入下一步操作；" class="headerlink" title="1.1.4.选择安装的模块和功能，这里全部安装，并添加到系统环境变量，继续点击Next，进入下一步操作；"></a>1.1.4.选择安装的模块和功能，这里全部安装，并添加到系统环境变量，继续点击Next，进入下一步操作；</h5><h5 id="1-1-5-这一步可以跳过，这个选项的意思是安装一些编译本地模块的工具，比如python，C-x2F-C-等，点击Next，进入下一步；"><a href="#1-1-5-这一步可以跳过，这个选项的意思是安装一些编译本地模块的工具，比如python，C-x2F-C-等，点击Next，进入下一步；" class="headerlink" title="1.1.5.这一步可以跳过，这个选项的意思是安装一些编译本地模块的工具，比如python，C&#x2F;C++等，点击Next，进入下一步；"></a>1.1.5.这一步可以跳过，这个选项的意思是安装一些编译本地模块的工具，比如python，C&#x2F;C++等，点击Next，进入下一步；</h5><h5 id="1-1-6-点击”install”，等待Node-js安装完成；"><a href="#1-1-6-点击”install”，等待Node-js安装完成；" class="headerlink" title="1.1.6.点击”install”，等待Node.js安装完成；"></a>1.1.6.点击”install”，等待Node.js安装完成；</h5><h5 id="1-1-7-当看到下图所显示的情况，Node-js就安装完毕；"><a href="#1-1-7-当看到下图所显示的情况，Node-js就安装完毕；" class="headerlink" title="1.1.7.当看到下图所显示的情况，Node.js就安装完毕；"></a>1.1.7.当看到下图所显示的情况，Node.js就安装完毕；</h5><h5 id="1-1-8-验证安装，并测试Node-js是否加入环境变量，当出现如下图的情况，Node-js安装大功告成；"><a href="#1-1-8-验证安装，并测试Node-js是否加入环境变量，当出现如下图的情况，Node-js安装大功告成；" class="headerlink" title="1.1.8.验证安装，并测试Node.js是否加入环境变量，当出现如下图的情况，Node.js安装大功告成；"></a>1.1.8.验证安装，并测试Node.js是否加入环境变量，当出现如下图的情况，Node.js安装大功告成；</h5><p>​如果执行node -v报错的话，那么手动将Node.js的安装路径添加到环境变量中，右键点击我的电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量，在系统变量下找到名为path的变量名，如下图：</p><p>​选中path，或者双击，然后将你node.js的安装路径放在path变量值的最后面，如果添加之前path值最后有英文的分号，则直接将路径添加进去即可，如果没有，先添加英文的分号，然后点击保存，回到桌面，打开cmd(Win+R)，执行node -v，看是否成功。</p><h5 id="1-1-9-设置npm的镜像源："><a href="#1-1-9-设置npm的镜像源：" class="headerlink" title="1.1.9.设置npm的镜像源："></a>1.1.9.设置npm的镜像源：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看npm的配置</span></span><br><span class="line">npm config list</span><br><span class="line"><span class="comment"># 默认源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org</span><br><span class="line"><span class="comment"># 临时改变镜像源</span></span><br><span class="line">npm --registry=https://registry.npm.taobao.org</span><br><span class="line"><span class="comment"># 永久设置为淘宝镜像源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line"><span class="comment"># 另一种方式，编辑 ~/.npmrc 加入下面内容</span></span><br><span class="line">registry = https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h5 id="1-1-10-设置npm的内置路径—-gt-全局模块路径和缓存路径-可选"><a href="#1-1-10-设置npm的内置路径—-gt-全局模块路径和缓存路径-可选" class="headerlink" title="1.1.10.设置npm的内置路径—&gt;全局模块路径和缓存路径(可选)"></a>1.1.10.设置npm的内置路径—&gt;全局模块路径和缓存路径(可选)</h5><p>npm包全局目录：C:&#x2F;Users&#x2F;[username]&#x2F;AppData&#x2F;Roaming&#x2F;npm&#x2F;node_modules<br>npm包全局命令目录：C:&#x2F;Users&#x2F;[username]&#x2F;AppData&#x2F;Roaming&#x2F;npm<br>npm实际去找全局命令的目录：C:&#x2F;Users&#x2F;[username]&#x2F;.npmrc 文件内容的prefix值<br>npm包全局cache目录：C:&#x2F;Users&#x2F;[username]&#x2F;.npmrc 文件内容的cache值</p><p>​首先在你Node.js的安装位置，新建两个文件夹，node_global和node_cache，我的路径是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\nodejs\node_global</span><br><span class="line">C:\Program Files\nodejs\node_cache</span><br></pre></td></tr></table></figure><p>然后分别执行的命令就是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix<span class="string">&quot;C:\Program Files\nodejs\node_global&quot;</span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">&quot;C:\Program Files\nodejs\node_cache&quot;</span></span><br></pre></td></tr></table></figure><p>​然后在配置环境变量，右击我的电脑 -&gt;属性 -&gt; 高级系统设置 -&gt; 环境变量同样的位置，在用户变量的地方，找到path变量进行修改，修改值如下图：</p><p>然后就大功告成了，Node.js就安装完毕了，下面开始Git安装。</p><h4 id="1-2-Git的安装与配置"><a href="#1-2-Git的安装与配置" class="headerlink" title="1.2.Git的安装与配置"></a>1.2.Git的安装与配置</h4><h4 id="1-3-修改配置文件要用到的软件"><a href="#1-3-修改配置文件要用到的软件" class="headerlink" title="1.3.修改配置文件要用到的软件:"></a>1.3.修改配置文件要用到的软件:</h4><h2 id="二、Github注册及Github-Page创建"><a href="#二、Github注册及Github-Page创建" class="headerlink" title="二、Github注册及Github Page创建"></a>二、Github注册及Github Page创建</h2><h2 id="三、配置Git用户名和邮箱"><a href="#三、配置Git用户名和邮箱" class="headerlink" title="三、配置Git用户名和邮箱"></a>三、配置Git用户名和邮箱</h2><h2 id="四、本地安装以及发布"><a href="#四、本地安装以及发布" class="headerlink" title="四、本地安装以及发布"></a>四、本地安装以及发布</h2><h2 id="五、hexo博客主题安装与修改"><a href="#五、hexo博客主题安装与修改" class="headerlink" title="五、hexo博客主题安装与修改"></a>五、hexo博客主题安装与修改</h2><h2 id="六、hexo博客美化"><a href="#六、hexo博客美化" class="headerlink" title="六、hexo博客美化"></a>六、hexo博客美化</h2><h2 id="七、添加评论系统"><a href="#七、添加评论系统" class="headerlink" title="七、添加评论系统"></a>七、添加评论系统</h2>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>取消windows11推荐项目</title>
      <link href="/2023/11/29/tjxm/"/>
      <url>/2023/11/29/tjxm/</url>
      
        <content type="html"><![CDATA[<h1 id="取消电脑开始菜单推荐项"><a href="#取消电脑开始菜单推荐项" class="headerlink" title="取消电脑开始菜单推荐项"></a>取消电脑开始菜单推荐项</h1><ol><li>点击下面的开始菜单，选择“设置”。</li><li>点击个性化，选择“开始”选项。</li><li>关闭“显示最近添加的应用”。</li><li>关闭“显示最近添加的应用程序”。</li><li>打开开始菜单，“推荐项目”已经关闭。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 电脑设置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电脑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>U盘自定义图标</title>
      <link href="/2023/10/04/upanicon/"/>
      <url>/2023/10/04/upanicon/</url>
      
        <content type="html"><![CDATA[<h1 id="U盘自定义图标"><a href="#U盘自定义图标" class="headerlink" title="U盘自定义图标"></a>U盘自定义图标</h1><pre>创建一个新文件夹命名为autorun.inf内容为<code class="yaml">[autorun]ICON=favicon.ico,0</code></pre><ul><li>其中的favicon.ico图片需要自己去免费的网站去转化</li><li>百度icon图片转换，找免费的就行</li><li>接着把autorun.inf和favicon.ico图片放入U盘根目录</li><li>注意:一定是要放在根目录</li><li>接着右键点击其中一个属性-&gt;隐藏-&gt;确定</li><li>最后把U盘拔出重新插入就大功告成了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 自定义 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> U盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欢迎加入藤原豆腐店</title>
      <link href="/2023/06/19/love/"/>
      <url>/2023/06/19/love/</url>
      
        <content type="html"><![CDATA[<p><img src="http://cdn-hw-static.shanhutech.cn/bizhi/staticwp/202208/f33d1facf67c752d643f0afe76887cb3--1254226905.jpg"></p><h3 id="大家好"><a href="#大家好" class="headerlink" title="大家好"></a>大家好</h3><p>我是<a href="https://qm.qq.com/q/iKy0HRVzOK">乔木</a>~<br>Welcome to <a href="http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&k=5TBf9UW6yyC3lf8obLGzw_e0G7bnMDAE&authKey=3pfL0dQz7MB/s5uRndRks1L9HLMuF+XkFju+fQpruW5qQkVpHZBO1Gzc+h4DLUet&noverify=0&group_code=747741804">碧蓝航线</a>!</p><span id="more"></span>]]></content>
      
      
      
        <tags>
            
            <tag> QQ </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
